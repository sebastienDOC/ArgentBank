swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters: 
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Return all transactions 
      description: This can only be done by the logged in user.
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields 
        '500':
          description: Internal Server Error
  /transaction/details/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Return the transaction informations by ID
      description: This can only be done by the logged in user.
      parameters: 
        - name: "transactionId"
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields 
        '500':
          description: Internal Server Error        
  /transaction/editCategory/{transactionId}: 
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Edit transaction category by ID
      description: This can only be done by the logged in user.
      parameters:
        - name: "transactionId"
          in: path
          description: ID of transaction to edit
          required: true
          type: integer
          format: int64
        - name: "category"
          in: body
          description: category of transaction to edit
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      responses:
        '200':
          description: Account transaction edited successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transaction/editDescription/{transactionId}: 
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Edit transaction description by ID
      description: This can only be done by the logged in user.
      parameters:
        - name: "transactionId"
          in: path
          description: ID of transaction to edit
          required: true
          type: integer
          format: int64
        - name: "description"
          in: body
          description: description of transaction to edit
          required: true
          schema:
            $ref: '#/definitions/TransactionDescription'
      responses:
        '200':
          description: Account transaction edited successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: Transaction ID
          title:
            type: string
            description: Transaction title
          description: 
            type: string
            description: Transaction description
          amount:
            type: string
            description: Transaction amount
          type :
            type: string
            description: Transaction type
          date:
            type: string
            description: Transaction date
          category:
            type: string
            description: Transaction category
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: Transaction category
  TransactionDescription:
    type: object
    properties:
      description:
        type: string
        description: Transaction description
